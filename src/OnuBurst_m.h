//
// Generated file, do not edit! Created by nedtool 5.5 from OnuBurst.msg.
//

#ifndef __ONUBURST_M_H
#define __ONUBURST_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include <vector>
#include "Dbru.h"
#include "OnuSdu_m.h"

typedef std::vector<Dbru> DbruVector;
// }}

/**
 * Class generated from <tt>OnuBurst.msg:32</tt> by nedtool.
 * <pre>
 * packet OnuBurst
 * {
 *     int onuId;
 *     omnetpp::cQueue sduQueue;
 *     DbruVector dbruVector;
 *     int64_t payload;
 * }
 * </pre>
 */
class OnuBurst : public ::omnetpp::cPacket
{
  protected:
    int onuId;
    omnetpp::cQueue sduQueue;
    DbruVector dbruVector;
    int64_t payload;

  private:
    void copy(const OnuBurst& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const OnuBurst&);

  public:
    OnuBurst(const char *name=nullptr, short kind=0);
    OnuBurst(const OnuBurst& other);
    virtual ~OnuBurst();
    OnuBurst& operator=(const OnuBurst& other);
    virtual OnuBurst *dup() const override {return new OnuBurst(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getOnuId() const;
    virtual void setOnuId(int onuId);
    virtual omnetpp::cQueue& getSduQueue();
    virtual const omnetpp::cQueue& getSduQueue() const {return const_cast<OnuBurst*>(this)->getSduQueue();}
    virtual void setSduQueue(const omnetpp::cQueue& sduQueue);
    virtual DbruVector& getDbruVector();
    virtual const DbruVector& getDbruVector() const {return const_cast<OnuBurst*>(this)->getDbruVector();}
    virtual void setDbruVector(const DbruVector& dbruVector);
    virtual int64_t getPayload() const;
    virtual void setPayload(int64_t payload);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const OnuBurst& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, OnuBurst& obj) {obj.parsimUnpack(b);}


#endif // ifndef __ONUBURST_M_H

